name: Terraform destroy
on:
  workflow_call:
    inputs:
      backend_key:
        required: true
        type: string
      ado_project_id:
        required: true
        type: string
      pipeline_id:
        required: true
        type: string
      azure_devops_organization_name:
        required: true
        type: string
        
jobs:
  terraform_destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './terraform'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="access_key=${{secrets.access_key}}" -backend-config="storage_account_name=${{secrets.storage_account_name}}" -backend-config="container_name=${{secrets.container_name}}" -backend-config="key=${{ inputs.backend_key }}"
    
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy --auto-approve -input=false -var="spn-client-id=${{secrets.SPN_CLIENT_ID}}" -var="spn-client-secret=${{secrets.SPN_CLIENT_SECRET}}" -var="spn-tenant-id=${{secrets.AZURE_TENANT_ID}}" -var="subscription-id=${{secrets.subscription_id}}" -var="ado_project_id=${{ inputs.ado_project_id }}" -var="pipeline_id=${{ inputs.pipeline_id }}" -var="azure_devops_organization_name=${{ inputs.azure_devops_organization_name }}"
        continue-on-error: false            